### 프로젝트 생성

- Java11 (가장 안정성)
- 인텔리제이
- 스프링 부트

### Maven, Gradle

과거에는 필요한 라이브러리를 땡겨서 오고 빌드하는 라이프사이클까지 관리하는 툴이다. 

요즘에는 Gradle로 하는게 추세 

- 스프링 라이브러리 자체를 그래들로 넘어옴
- Java
- Spring Boot 버전
    - SNAPSHOT: 아직 만들고있음
    - M1: 정식 릴리즈 된게 아님
    - 2.3.1: 아직은 안정화된 버전 → 버전도 업데이트 할 수 있음

### Project Metadata

- Group: 기업명
- Artifact:

### Dependencies

- 스프링부트 기반으로 프로젝트 시작을 하는데 어떤 라이브러리를 땡겨서 쓸거냐
1. Spring web: 웹 프로젝트여서 
2.  Thymleaf: html만들어주는 템플릿엔진이 필요함 (다양한게 많음..) 

### Generate & Download & Open

1. 다 완성하고 Generate를 해준다. 
2. 압축된 파일을 원하는 경로에 풀어준다. 
3. 인텔리제이에서 열어준다. 
4. 라이브러리를 다운받아서 네트워크를 열어주고 로딩을 기다려준다. 

### 프로젝트 구조

1. src/main
2. src/test
    
    main/test가 표준화로 되어있다. 
    
    main밑에 java가 있고 java밑에 패키지가있다. 
    
    - resources는 자바를 제외한 xml, 프로퍼티스, 설정파일,html이 들어감 (자바를 제외한 파일을 넣는 곳)
    
    test는 테스트 관련된 소스코드로 나눠져 있다 → 테스트가 정말 중요 
    
3. build.gradle
    - 옛날에는 한땀한땀치거나, 복사함. 요새는 잘 나와서 개발적 친화적으로 설정까지 제공이 된다.
    - 2.3.1, java 까지 설정이 되어있다.
    - gradle이 버전설정하고 라이브러리를 땡겨오는구나 정도
    - * 아모레꺼 build.gradle보기
    - 라이브러리 다운로드 받는 곳은 ?
4. .gitIgnore
- 필요한 소스코드 파일만 올라가게 하는 것 (스프링 스타터에서 다해줌)

### Application 클래스가 있음

main메서드가 있는거로 부터 모든 시작이 한다. 그냥 실행하면 된다.

- main메서드를 실행하면 SpringApplication.run해서 클래스를 넣어주면 @SpringBootApplication으로 띄어줌
- 자기가 띄우면서 톰캣 웹서버를 내장하고 있음, 톰캣이라는 웹 서버를 자체적으로 띄우면서 Spring boot가 동작함

번외

- 빌드가 자바를 직접실행이 아니라 그래들로 통해서 시작되면 Preferences > Gradle 에서 Build and run을 IntelliJ로 바꿔줘라 (그래들을 통해서 run을 하면 느려진다. Gradle통하지 않고 인텔리에서 자바를 바로 띄어버림)